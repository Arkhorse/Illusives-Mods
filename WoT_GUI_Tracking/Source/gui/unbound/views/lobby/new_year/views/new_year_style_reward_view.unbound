(def layout NewYearStyleRewardView() entrance=true
    (macro NewYearStyleRewardViewModel)
    (scope
        (event evStart)
        (event evBeginFlow)
        (event evShowCongrats)
        (event evShowTextHeaderComplete)
        (event evShowTextSubHeaderComplete)
        (event evShowRibbon)
        (event evShowButton)
        (event evShineComplete)
        (event evShowStyleRewardComplete)
        (event evClose)
        (event evOnRewardsAnimationComplete)

        (var canPlayRibbonEndsSound:bool = false)
        (bind canPlayRibbonEndsSound true init=false
            (event "evOnRewardsAnimationComplete")
        )

        (var ribbonEndsSoundPlayed:bool = false)
        (bind ribbonEndsSoundPlayed true init=false
            (event "evClose")
            (enabled = "!canPlayRibbonEndsSound")
        )


        (var closeEnabled:bool = false)
        (bind closeEnabled true init=false
            (event "evShowButton")
        )
        (bind closeEnabled false init=true
            (event "evClose")
        )
        (macro BgAspectRatioHelper "evStart")
        (var tmpVal:number = 0)

        (const BEGIN_FLOW_TXT_TMR_ID:str = 'beginFlowTxtTmrId')
        (const SHOW_CONGRATS_TXT_TMR_ID:str = 'showCongratsTxtTmrId')
        (const SHOW_COLLECT_RWRDS_BTN_TMR_ID:str = 'showCollectRwrdsBtnTmrId')
        (const SHOW_RIBBON_TMR_ID:str = 'showRibbonTmrId')

        # Time for ensurance that everything was loaded even on weak computers
        (macro _TimerWrkarnd "0.2" "evStart" "evBeginFlow" "evClose" "BEGIN_FLOW_TXT_TMR_ID")
        (macro _TimerWrkarnd "0.76" "evShowCongrats" "evStart" "evClose" "SHOW_CONGRATS_TXT_TMR_ID")
        (macro _TimerWrkarnd "0.40" "evShowRibbon" "evStart" "evClose" "SHOW_RIBBON_TMR_ID")
        (macro _TimerWrkarnd "1.40" "evShowButton" "evStart" "evClose" "SHOW_COLLECT_RWRDS_BTN_TMR_ID")
    
        (var collectBtnAlpha:number = 0.0)
        (var collectBtnRedAdd:number = 0)
        (var collectBtnGreenAdd:number = 0)
        (var finalHeaderPosition:number = "(viewSize.height > BASE_HEIGHT_960 ? -430 : -350)"
            (event "viewResized")
        )
        (var baseStyleRewardScale:number = "viewSize.height > BASE_HEIGHT_960 ? 0.75 : 0.55"
            (event "evShowStyleRewardComplete")
            (event "viewResized")
        )
        (var styleRewardAlpha:number = 0.0)
        (var styleRewardScale:number = "baseStyleRewardScale"
            (event "evShowStyleRewardComplete")
            (event "viewResized")
        )
        (var styleRewardRedAdd:number = 100)
        (var styleRewardGreenAdd:number = 100)
        (var styleRewardBlueAdd:number = 100)
        (var styleRewardBlurVal:number = 20)

        (var shineAlpha:number = 0)
        (var shineScale:number = 1)
        (var baseShineScale:number = 1)
        (bind baseShineScale "viewSize.height > BASE_HEIGHT_960 ? 2 : 1.5"
            (event "evShineComplete")
            (event "viewResized")
        )
        (bind shineScale "baseShineScale * 1.5" init=false
            (event "evShineComplete")
            (event "viewResized")
        )

        (controller $Animation
            (bindcall play
                duration=3
                to="{shineAlpha:1, shineScale:baseShineScale * 1.5}"
                callbacks="{onComplete: evShineComplete}"
                easing="Easing.sine_in_out"
                (event "evStart")
            )
        )

        (controller $Animation
            (bindcall play
                delay=0.3
                duration=0.70
                from="{styleRewardScale:baseStyleRewardScale - 0.01}"
                to="{styleRewardScale: baseStyleRewardScale, styleRewardAlpha: 1.0, styleRewardRedAdd: 0, styleRewardGreenAdd: 0, styleRewardBlueAdd: 0, styleRewardBlurVal: 0}"
                callbacks="{onComplete: evShowStyleRewardComplete}" easing="Easing.sine_in_out" watch=false init=false
                (event "evStart")
            )
        )

        (controller $Animation
            (bindcall playSeq "[
                    {delay: 0.60, duration: 0.50, to:{collectBtnAlpha: 1.0, collectBtnRedAdd: 50, collectBtnGreenAdd: 50}, easing:Easing.quint_in},
                    {duration: 0.08, to:{collectBtnRedAdd: 0, collectBtnGreenAdd: 0}}
                ]"
                id='collectRewardsBtn'
                (event "evShowButton")
            )
        )
    )

    (controller $Animation
        (bindcall play
            duration=0.90
            to={alpha:0}
            easing="Easing.cubic_out"
            callbacks="{onComplete:onClose}"
            (event "evClose")
        )
    )

    (style
        (macro ViewResizeBindedSize)
    )

    (tabEnabled = true)


    # sounds
    (exec "playSound(R.sounds.gui_random_reward_end())"
        (bind enabled "canPlayRibbonEndsSound && !ribbonEndsSoundPlayed")
    )
    (exec "playSound(R.sounds.gui_random_reward_end())"
        (event "evClose")
        (enabled = "!canPlayRibbonEndsSound")
    )

    (block  
        (name = 'backgroundBlock')
        (block
            (style
                (alpha = 0)
            )
            (name = 'mainBackgroundLayer')
            (element NYSparksBackgroundElement)
            (controller $Animation
                (bindcall play delay=0.3 duration=0.90 to={alpha:1} easing="Easing.cubic_out"
                    (event "evStart")
                )
            )
        )
        (block
            (name = 'iceVignetteLayer')
            (style
                (alpha = 0)
            )
            (image
                (dispatch evStart on='complete')
                (style
                    (blendMode = 'add')
                    (macro ViewResizeBindedSize)
                )
                (source = "R.images.gui.maps.icons.new_year.level_up_view.ny_ice()")
            )
            (controller $Animation
                (bindcall play duration=0.90 to={alpha:1} easing="Easing.cubic_out"
                    (event "evStart")
                )
            )
        )
    )

    (block
        (name = 'rewards')
        (style
            (position = "absolute")
            (width = 100%)
            (height = 100%)
            (align = "center")
        )
        (tf
            (name = 'congratsTextHeader')
            (style
                (position = "absolute")
                (hcenter = 0px)
                (bind vcenter "viewSize.height > BASE_HEIGHT_960 ? finalHeaderPosition + 50 : finalHeaderPosition + 60"
                    watch=true
                    init=true
                    (event "viewResized")
                    (event "evShowTextHeaderComplete")
                )
            )
            (visible = false)
            (bind class "viewSize.height > BASE_HEIGHT_960 ? 'EpicTitleTextStyle' : 'HeroTitleTextStyle'"
                (event "viewResized")
            )
            
            (bind text "isMega ? 
                R.strings.ny.styleRewardView.rewards.megaTitle() :
                TextFormat(R.strings.ny.styleRewardView.rewards.title(), {collectionName: R.strings.ny.styleRewardView[styleStr]()})"
                init=false
            )
            (controller $Animation
                (bindcall playSeq
                    "[
                        {duration:0.01, to:{visible: 1}},
                        {
                            duration:0.4, 
                            from:{alpha: 0, vcenter: finalHeaderPosition + 90}, 
                            to:{alpha: 1.0, vcenter: (viewSize.height > BASE_HEIGHT_960) ? finalHeaderPosition + 50 : finalHeaderPosition + 60},
                            easing: Easing.cubic_out
                        }
                    ]"
                    watch=false
                    callbacks="{onComplete:evShowTextHeaderComplete}"
                    (event "evShowCongrats")
                )
            ) 
        )
        (tf
            (name = 'congratsTextSubHeader')
            (style
                (position = "absolute")
                (hcenter = 0px)
                (bind vcenter "finalHeaderPosition + 120" watch=true init=true
                    (event "viewResized")
                    (event "evShowTextSubHeaderComplete")
                )
            )
            (visible = false)
            (bind visible true init=false
                (event "evShowCongrats")
            )
            (bind class "viewSize.height > BASE_HEIGHT_960 ? 'SuperPromoTitleTextStyle' : 'PromoSubTitleTextStyle'"
                (event "viewResized")
            )
            (text = "R.strings.ny.styleRewardView.rewards.description()")
            (controller $Animation
                (bindcall play
                    delay=0.3 duration=0.40
                    from="{alpha:0, vcenter: finalHeaderPosition + 130}"
                    to="{alpha:1.0, vcenter: finalHeaderPosition + 120}"
                    easing="Easing.cubic_out" watch=false callbacks="{onComplete:evShowTextSubHeaderComplete}"
                    (event "evShowCongrats")
                )
            ) 
        )
        (image
            (style
                (position = "absolute")
                (hcenter = -60px)
                (vcenter = -50px)
                (blendMode = 'add')
                (bind alpha "shineAlpha")
                (bind scaleX "shineScale")
                (bind scaleY "shineScale")
                (zindex = 1)
                (pivotX = 50%)
                (pivotY = 50%)
            )
            (source = "R.images.gui.maps.icons.new_year.style_reward.shine()")
        )
        (image
            (name = 'styleRewardImage')
            (style
                (position = "absolute")
                (hcenter = 0px)
                (vcenter = 0px)
                (pivotX = 50%)
                (pivotY = 50%)
                (bind alpha "styleRewardAlpha")
                (bind scaleX "styleRewardScale")
                (bind scaleY "styleRewardScale")
                (zindex = 2)
                (filters
                    (blur
                        (bind blurX "styleRewardBlurVal")
                        (blurY = 0)
                        (quality = 2)
                    )
                )
            )
            (bind colorTransform "{redOffset:styleRewardRedAdd, greenOffset:styleRewardGreenAdd, blueOffset:styleRewardBlueAdd}")
            (bind source "R.images.gui.maps.icons.new_year.collections_reward.styles[styleStr+'_style'].exists()
                ? R.images.gui.maps.icons.new_year.collections_reward.styles[styleStr+'_style']()
                : ''" init=false)
        )
        (element RewardsRibbon
            (name = 'rewardsRibbon')
            (style
                (width = 100%)
                (position = "absolute")
                (bind vcenter "viewSize.height > BASE_HEIGHT_960 ? 280 : 220" 
                    (event "viewResized")
                )
            )
            (scope
                (bind isOpenBoxAnimPlayed true init=false
                    (event "evShowRibbon")
                )
                (canShowCongratsImg = true)
                (bind isFadeIn true init=false
                    (event "evShowRibbon")
                )
                (bind isReadyForRestart false init=true
                    (event "evStart")
                )
                (showCongratsTitle = false)
                (bind rewards "rewards")
                (customRibbonImg = "R.images.gui.maps.icons.new_year.style_reward.ny_ribbon()")
                (customRibbonTopOffset = -140px)
                (isNYRibbonAnimation = true)
            )
        )
        (button
            (dispatch evClose on='clicked')
            (style
                (position = "absolute")
                (hcenter = 0px)
                (minWidth = 150px)
                (minHeight = 30px)
                (bind vcenter "viewSize.height > BASE_HEIGHT_960 ? 360 : 310"
                    (event "viewResized")
                )
                (bind alpha "collectBtnAlpha")
            )
            (name = 'okBtn')
            (macro ButtonStylePrimary "BUTTON_SIZE_MEDIUM")
            (label = "R.strings.ny.levelUpView.okBtn.label()")
            (bind colorTransform "{redOffset:collectBtnRedAdd, greenOffset:collectBtnGreenAdd}")
            (bind enabled "closeEnabled")
            (bindcall setFocus
                (event "evShowButton")
            )
        )
    )

    (mc 'NYLevelUpSnowAnimation'
        (style
            (position = "absolute")
            (left = 50%)
            (top = 25%)
        )
        (stop)
        (visible = false)
        (bind visible true init=false
            (event "evStart")
        )
        (bindcall gotoAndPlay 1
            (event "evStart")
        )
        (mouseChildren = false)
        (mouseEnabled = false)
    )

    (text_button 'closeBtn'
        (macro ButtonCloseStyle)
        (style
            (position = "absolute")
            (right = 40px)
            (top = 40px)
            (alpha = 0)
        )
        (label = "R.strings.menu.viewHeader.closeBtn.label()")
        (dispatch evClose on='clicked')
        (bind enabled "closeEnabled")
        (controller $Animation
            (bindcall play delay=0.9 duration=0.2 to={alpha:1}
                (event "evShowButton")
            )
        )
    )
    (dispatch evClose on='escPressed'
        (enabled = "closeEnabled")
    )
)

(def layout NYSparksBackgroundElement(bgColor:number = 0xFF0c0b10, bgSource:str = "R.images.gui.maps.icons.new_year.style_reward.background()")
    (name = 'background')
    (scope
        (event evReadyToShow)
        (macro BgAspectRatioHelper "evReadyToShow")
    )
    (style
        (position = "absolute")
        (macro ViewResizeBindedSize)
        (bind backgroundColor "bgColor")
    )

    
    (macro ViewTransparentBg)
    (image
        (name = 'icon')
        (style
            (position = "absolute")
            (hcenter = 0px)
            (vcenter = 0px)
            (bind width "bgW")
            (bind height "bgH")
        )
        (dispatch evReadyToShow on='complete')
        (bind source "bgSource")
    )
    (block
        (name = 'backSparklesBlock')
        (style
            (position = "absolute")
            (hcenter = 0px)
            (vcenter = 0px)
            (bind width "bgW")
            (bind height "bgH")
        )

        (macro NoTabAndMouse)

        (element SparkAnim nameStr='spark1' posTop="30%" posLeft="25.4%" xScale="0.3" yScale="0.3")
        (element SparkAnim nameStr='spark2' posTop="30.2%" posLeft="70.8%" xScale="0.3" yScale="0.3")
        (element SparkAnim nameStr='spark3' posTop="65.7%" posLeft="14.9%" xScale="0.4" yScale="0.4")
        (element SparkAnim nameStr='spark4' posTop="60%" posLeft="83.85%" xScale="0.4" yScale="0.4")
    )
)