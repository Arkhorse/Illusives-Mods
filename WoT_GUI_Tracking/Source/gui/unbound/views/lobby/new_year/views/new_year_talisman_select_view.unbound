(def layout NewYearTalismanSelectView() entrance=true
    (macro NewYearTalismanSelectViewModel)

    (scope
        (var ratio:number = "viewSize.width/viewSize.height"
            (event "viewResized")
        )
        (var isSmall:bool = "viewSize.height <= BASE_HEIGHT_864"
            (event "viewResized")
        )

        (dispatch onViewResized args="{width:viewSize.width, height:viewSize.height}" 
            (event "viewResized")
        )

        (const TALISMAN_INDEX:dict = {
            'Fairytale': 0,
            'NewYear': 1,
            'Christmas': 2,
            'Oriental': 3
        })
    )

    (bindcall setFocus on='stageMouseUp')
    (dispatch onCloseBtnClick on='escPressed')
    
    (style
        (macro ViewResizeBindedSize)
        (align = "center|middle")
    )

    (block
        (name = 'viewHeaderBlock')
        (style
            (width = 100%)
            (position = "absolute")
            (bind top "isSmall ? 30px : 45px")
            (align = "center")
        )
        (tf
            (name = 'titleTF')
            (class TalismanSelectViewTitleStyle)
            (bind text "TextFormat(R.strings.ny.newYearTalisman.talisman[selectedCount > 0 ? 'selectNext' : 'select'].header(),
                            {talismanNumber: R.strings.ny.newYearTalisman.talisman['number' + selectedCount]()})")
        )

        (tf
            (style
                (width = 97%)
                (textAlign = "center")
                (wordWrap = true)
                (multiline = true)
            )
            (name = 'descriptionTF')
            (class TalismanSelectViewDescriptionStyle)
            (text = "R.strings.ny.newYearTalisman.talisman.select.description()")
        )
    )

    (controller $Repeat renderer='NYTalismanSelectItem' layout=true
        (bind count "talismans.length")
        (args "'talismanDescription' + $index")
        (exprs
            (scope
                (bind talismanType "talismans[$index].talismanType")
                (bind isSelected "talismans[$index].isSelected")
                (bind isHover "talismans[$index].isHover")
                (bind isSmall "isSmall")
            )
            (style
                (position = "absolute")
                (bottom = 10px)
                (bind hcenter "talismanPositionSet[TALISMAN_INDEX[talismans[$index].talismanType]]"
                    (event "viewResized")
                )
            )
        )
    )

    (text_button 'closeBtn'
        (name = 'closeBtn')
        (macro ButtonCloseStyle)
        (style
            (position = "absolute")
            (right = 13px)
            (bind top "isSmall ? 24px : 43px"
                (event "viewResized")
            )
        )
        (label = "R.strings.menu.viewHeader.closeBtn.label()")
        (dispatch onCloseBtnClick on='clicked')
    )
)

(def layout NYTalismanSelectItem(objName:str)
    (macro NewYearTalismanSelectStateModel)
    (scope
        (var isSmall:bool = false)
        (var talismanHoveredTfAlpha:number = 0)
        (controller $Animation
            (bindcall play duration=0.2 to="{talismanHoveredTfAlpha:1}" init=false
                (bind enabled "isHover")
            )
            (bindcall play duration=0.2 to="{talismanHoveredTfAlpha:0}" init=false
                (bind enabled "!isHover")
            )
        )
    )
    (name = "objName")
    (style
        (bind width "isSmall ? 180px : 300px")
        (height = 85px)
        (align = "center|top")
    )

    (tf
        (name = 'talismanNameTF')
        (style
            (width = 100%)
            (textAlign = "center")
        )
        (bind class "isSelected ? 'SelectedTalismanTextStyle' : 'TalismanSelectViewDescriptionStyle'")
        (bind text "R.strings.ny.newYearTalisman.talisman.type[talismanType]()")
    )

    (tf
        (name = 'talismanNameHoveredTF')
        (style
            (width = 100%)
            (textAlign = "center")
            (position = "absolute")
        )
        (bind alpha "talismanHoveredTfAlpha")
        (class HoveredTalismanTextStyle)
        (bind text "R.strings.ny.newYearTalisman.talisman.type[talismanType]()")
    )

    (hblock
        (name = 'talismanSelectedBlock')
        (style
            (marginLeft = -15px)
        )
        (bind visible "isSelected")
        (image
            (name = 'talismanSelectedImg')
            (style
                (marginTop = -14px)
                (marginRight = -15px)
            )
            (source = "R.images.gui.maps.icons.new_year.icon_arrow()")
        )
        (tf
            (name = 'talismanSelectedTF')
            (class SelectedTalismanTextStyle)
            (text = "R.strings.ny.newYearTalisman.talisman.select.selected()")
        )
    )
)
