(def macro NyLevelsScopeConsts()
    (scope
        (const REWARDS_HEIGHT_PRESETS:dict = {
                'big': 720px,
                'normal': 600px,
                'small': 500px
            }
        )

        (const REWARDS_HEIGHT_PRESETS_OFFSET:dict = {
                'big': 0px,
                'normal': 0px,
                'small': 40px
            }
        )
    )
)

(def layout NyLevelsRewardsView() entrance=true isReadyTracked=true loadOrder="LoadOrder.NOT_WAITING_FIRST"
    (name = 'nyLevelsRewardsView')
    (macro NyLevelsRewardsViewModel)
    (macro AdaptiveSize)
    (macro NyLevelsScopeConsts)
    (scope
        (const OFFSETS_PRESETS:dict = {
                'big': 0px,
                'normal': 0px,
                'small': 40px
            }
        )

        (const GAP_PRESETS:dict = {
                'big': 2px,
                'normal': 1px,
                'small': 2px
            }
        )

        (const BUTTON_PADDING_PRESETS:dict = {
                'big': 90px,
                'normal': 60px,
                'small': 60px
            }
        )

        (const CAP_VCENTER_OFFSET:dict = {
                'cap_6': 20px,
                'cap_7': -14px,
                'cap_8': 0px,
                'cap_9': 10px,
                'cap_10': -20px,
                'cap_11': -60px,
                'cap_12': -95px
            }
        )
        
        (event evReadyToShow)

        (dispatch onRewardsCapacityChanged args="{maxCapacity: viewSize.height >= BASE_HEIGHT_1400 ? 12 
                : (viewSize.height >= BASE_HEIGHT_1300 ? 11 
                : (viewSize.height >= BASE_HEIGHT_1137 ? 10 
                : (viewSize.height >= BASE_HEIGHT_1080 ? 9 
                : (viewSize.height >= BASE_HEIGHT_960 ? 8 
                : (viewSize.height >= BASE_HEIGHT_900 ? 7 
                : 6)))))}"
            (event "viewResized")
            (event "$evReadyChanged")
        )

        (var capVCenterOffset:number = "CAP_VCENTER_OFFSET['cap_6']")
        (bind capVCenterOffset "(viewSize.width > BASE_WIDTH_1366 ? 18 : 0) + CAP_VCENTER_OFFSET['cap_'+$event.maxCapacity]"
            init=false
            (event "onRewardsCapacityChanged")
        )

        (var viewAlpha:number = 0)
        (controller $Animation
            (bindcall play
                delay=0.3
                duration=0.9
                to={viewAlpha:1}
                easing="Easing.cubic_out"
                (event "evReadyToShow")
            )
        )
    )

    (style
        (width = 100%)
        (height = 100%)
        (bind alpha "viewAlpha")
    )
    
    (group name='rewardRenderers'
        (renderer = 'NewYearRewardRenderer')
        (style
            (position = "absolute")
            (bind vcenter "capVCenterOffset")
            (bind hcenter "OFFSETS_PRESETS[widthSize]")
        )
        (container
            (style
                (flow = "Flow.HORIZONTAL")
                (bind hgap "GAP_PRESETS[widthSize]")
            )
        )
    )

    (button
        (name = 'vehiclesBtn')
        (macro ButtonStyleMain "BUTTON_SIZE_LARGE")
        (style
            (position = "absolute")
            (hcenter = 0px)
            (bind bottom "BUTTON_PADDING_PRESETS[heightSize]")
            (minWidth = 206px)
        )
        (mc 'Btn_Blink'
            (class AbsPositionFullSizeStyle)
        )
        
        (label = "R.strings.ny.levelsRewards.vehiclesBtn.label()")
        (dispatch onTankSlotClick on='clicked')
    )
)

(def macro AdaptiveSize()
    (scope
        (var widthSize:str = "viewSize.width >= BASE_WIDTH_1920 ? 'big' : (viewSize.width >= BASE_WIDTH_1366 ? 'normal' : 'small')"
            (event "viewResized")
        )

        (var heightSize:str = "viewSize.height >= BASE_HEIGHT_1080 ? 'big' : (viewSize.height >= BASE_HEIGHT_960 ? 'normal' : 'small')"
            (event "viewResized")
        )
    )
)
