(def constant NY_GLADE_SIDE_BAR 
{
    sectionCount: 2,
    gap: 23,
    gapSmall: 23,
    tabBarGapStartIndex: 3,
    tabBarGapSize: 23,
    tabBarGapSizeSmall: 23,
    tabRenderer: 'NySideTabBarRenderer',
    tabSelectedRenderer: 'NyTabBarSelectedBlockRenderer',
    topPadding: 0,
    topPaddingSmall: 40,
    selectedTabSwitchAnimationDelay: 0.3,
    bgImages: [
        {
            tabCount: 0,
            tabCountOffset: 2,
            marginTop: -1,
            marginTopSmall: -1,
            topPadding: -2,
            topPaddingSmall: -1,
            heightOffset: 1,
            heightOffsetSmall: 1
        },
        {
            tabCount: 2,
            tabCountOffset: 0,
            marginTop: 0,
            marginTopSmall: 0,
            topPadding: 0,
            topPaddingSmall: 0,
            heightOffset: 0,
            heightOffsetSmall: 0
        }
    ]
}
)

(def constant NY_REWARDS_SIDE_BAR
{
    sectionCount: 2,
    gap: 52,
    gapSmall: 23,
    tabBarGapStartIndex: 0,
    tabBarGapSize: 52,
    tabBarGapSizeSmall: 23,
    tabRenderer: 'NySideTabBarRenderer',
    tabSelectedRenderer: 'NyTabBarSelectedBlockRenderer',
    topPadding: 0,
    topPaddingSmall: 0,
    selectedTabSwitchAnimationDelay: 0.3,
    bgImages: [
        {
            tabCount: 1,
            tabCountOffset: 0,
            marginTop: -1,
            marginTopSmall: 0,
            topPadding: 0,
            topPaddingSmall: 0,
            heightOffset: 1,
            heightOffsetSmall: 0
        },
        {
            tabCount: 0,
            tabCountOffset: 1,
            marginTop: -30,
            marginTopSmall: -30,
            topPadding: -38,
            topPaddingSmall: -1,
            heightOffset: 37,
            heightOffsetSmall: 1
        }
    ]
}
)

(def constant NY_ALBUMS_SIDE_BAR
{
    sectionCount: 1,
    gap: 0,
    gapSmall: 0,
    tabBarGapStartIndex: 0,
    tabBarGapSize: 0,
    tabBarGapSizeSmall: 0,
    tabRenderer: 'NyTabBarAlbumRenderer',
    tabSelectedRenderer: 'NyTabBarSelectedBlockRenderer',
    topPadding: 0,
    topPaddingSmall: 0,
    selectedTabSwitchAnimationDelay: 0,
    bgImages: [
        {
            tabCount: 0,
            tabCountOffset: 0,
            marginTop: 0,
            marginTopSmall: 0,
            topPadding: -1,
            topPaddingSmall: -1,
            heightOffset: 1,
            heightOffsetSmall: 1
        }
    ]
}
)

(def layout NYSidebarUBInject() entrance=true
    (name = 'NYSidebarUBInject')
    (macro NySidebarModel)
    (scope
        (var isSmall:bool = "viewSize.width <= BASE_WIDTH_1366 || viewSize.height <= BASE_HEIGHT_768"
            (event "viewResized")
        )

        (event evPreSwitchContent)
        (dispatch onSideBarBtnClick args="{tabName: $event.view}" dir=1
            (event "evPreSwitchContent")
        )

        (var someProp:number = 0)
        (event evShowTabBar)
        (event evConfigChanged)
        (var config:dict = null
            (dispatch evConfigChanged on='evChanged')
        )
        (bind config "viewName != '' ? (viewName == VIEW_NAME_COLLECTIONS ? NY_ALBUMS_SIDE_BAR : (viewName == VIEW_NAME_REWARDS ? NY_REWARDS_SIDE_BAR : NY_GLADE_SIDE_BAR)) : null")
        (controller $Animation
            (bindcall play duration=0.05 to={someProp:1} callbacks="{onComplete: evShowTabBar}" init=false
                (event "evConfigChanged")
            )
        )
    )

    (style
        (bind height "viewSize.height - NY_TOP_OFFSET" 
            (event "viewResized")
        )
    )

    (block
        (name = 'sidebarBlock')
        (macro NYSideTabBatPositionStyle)
        (style
            (bind vcenter "config != null ? (isSmall ? config.topPaddingSmall : config.topPadding) : 0")
        )

        (bind visible "itemsTabBar.length > 0")

        (controller $Instance layout=true
            (enabled = false)
            (exprs
                (block
                    (name = 'bgHolder')
                    (style
                        (position = "absolute")
                        (width = 100%)
                        (height = 100%)
                        (bind gap "isSmall ? config.gapSmall : config.gap")
                    )

                    (controller $Repeat renderer='NYTabBarBgImage'
                        (bind count "config.sectionCount")
                        (exprs
                            (style
                                (bind marginTop "isSmall ? config.bgImages[$index].topPaddingSmall : config.bgImages[$index].topPadding")
                            )
                            (scope
                                (bind isSmall "isSmall")
                                (bind tabCount "config.bgImages[$index].tabCountOffset > 0 
                                    ? itemsTabBar.length - config.bgImages[$index].tabCountOffset 
                                    : (config.bgImages[$index].tabCount > 0 ? config.bgImages[$index].tabCount : itemsTabBar.length)"
                                    )
                                (bind heightOffset "isSmall ? config.bgImages[$index].heightOffsetSmall : config.bgImages[$index].heightOffset")
                                (bind topPadding "isSmall ? config.bgImages[$index].topPaddingSmall : config.bgImages[$index].topPadding")
                            )
                        ) 
                    )
                )

                (tf
                    (name = 'forColections')
                    (style
                        (position = "absolute")
                        (bind top "isSmall ? 150px : 172px")
                        (width = 100%)
                        (textAlign = "center")
                        (marginTop = -40px)
                        (bind fontSize "isSmall ? 12px : 16px")
                    )
                    (class TabBarTextStyle)
                    (text = "R.strings.ny.tabBar.forCollection()")
                    (bind visible "viewName == VIEW_NAME_REWARDS && !isSmall")
                )

                (element NYTabBar "config.tabRenderer" "config.tabSelectedRenderer" "MENU_LEFT_SIZE"
                    (name = 'tabBar')
                    (scope
                        (bind selectedIndex "startIndex")
                        (bind renderers "itemsTabBar")
                        (bind isHideText "isSmall")
                        (bind isSmall "isSmall")
                        (bind gapStartedFromIndex "config.tabBarGapStartIndex")
                        (bind gapSize "isSmall ? config.tabBarGapSizeSmall : config.tabBarGapSize")
                        (horizontal = false)
                        (bind selectedTabSwitchAnimationDelay "config.selectedTabSwitchAnimationDelay")
                    )
                )
            )
            (bind enabled false init=false
                (event "evConfigChanged")
            )
            (bind enabled true init=false
                (event "evShowTabBar")
            )
        )
    )
)